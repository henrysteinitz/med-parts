{"ast":null,"code":"var _jsxFileName = \"/Users/henrysteinitz/Desktop/med-supplies/components/page.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport Cart from \"./cart\";\nimport Item from \"./item\";\nimport MenuBar from \"./menubar\";\nexport default class Page extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      cartOpen: false,\n      itemMap: {},\n      assetDescription: \"\",\n      assetManufacturer: \"\",\n      assetModel: \"\",\n      partType: \"\",\n      partDescription: \"\",\n      items: this.props.items\n    });\n\n    _defineProperty(this, \"toggleCart\", () => this.setState({\n      cartOpen: !this.state.cartOpen\n    }));\n\n    _defineProperty(this, \"addToCart\", item => {\n      let newItemMap = this.state.itemMap;\n      newItemMap[item.id] = item;\n      this.setState({\n        itemMap: newItemMap\n      });\n      console.log(this.state.itemMap);\n    });\n\n    _defineProperty(this, \"filterAssetDescription\", (items, value) => items.filter(x => x.asset_description === value));\n\n    _defineProperty(this, \"filterAssetManufacturer\", (items, value) => tems.filter(x => x.asset_manufacturer === value));\n\n    _defineProperty(this, \"filterAssetModel\", (items, value) => items.filter(x => x.asset_model === value));\n\n    _defineProperty(this, \"filterPartType\", (items, value) => items.filter(x => x.part_type === value));\n\n    _defineProperty(this, \"filterPartDescription\", (items, value) => items.filter(x => x.part_description === value));\n\n    _defineProperty(this, \"getAssetDescriptions\", (items, value) => new Array(new Set(items.map(item => item.asset_description))));\n\n    _defineProperty(this, \"getAssetManufacturers\", (items, value) => new Array(new Set(items.map(item => item.asset_manufacturer))));\n\n    _defineProperty(this, \"getAssetModels\", (items, value) => new Array(new Set(items.map(item => item.asset_model))));\n\n    _defineProperty(this, \"getPartTypes\", (items, value) => new Array(new Set(items.map(item => item.part_type))));\n\n    _defineProperty(this, \"getPartDescriptions\", (items, value) => new Array(new Set(items.map(item => item.part_description))));\n\n    _defineProperty(this, \"hadleAssetDescriptionSelect\", value => {\n      let {\n        nextItems: [...items]\n      } = this.state;\n      this.setState({\n        items: this.filterAssetDescription(nextItems, value),\n        assetManufacturer: '',\n        assetModel: '',\n        partType: '',\n        partModel: ''\n      });\n    });\n\n    _defineProperty(this, \"hadleAssetManufacturerSelect\", value => {\n      let {\n        nextItems: [...items]\n      } = this.state;\n      this.setState({\n        items: this.filterAssetManufacturer(nextItems, value),\n        assetModel: '',\n        partType: '',\n        partModel: ''\n      });\n    });\n\n    _defineProperty(this, \"hadleAssetModelSelect\", value => {\n      let {\n        nextItems: [...items]\n      } = this.state;\n      this.setState({\n        items: this.filterAssetModel(nextItems, value),\n        partType: '',\n        partModel: ''\n      });\n    });\n\n    _defineProperty(this, \"handlePartType\", value => {\n      let {\n        nextItems: [...items]\n      } = this.state;\n      this.setState({\n        items: this.filterPartType(nextItems, value),\n        partModel: ''\n      });\n    });\n\n    _defineProperty(this, \"handlePartDescription\", () => {\n      let {\n        nextItems: [...items]\n      } = this.state;\n      this.setState({\n        items: this.filterPartDescription(nextItems, value)\n      });\n    });\n  }\n\n  render() {\n    const {\n      cartOpen,\n      itemMap,\n      items\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 4\n      }\n    }, __jsx(MenuBar, {\n      toggleCart: this.toggleCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }\n    }), __jsx(\"div\", {\n      className: \"fake-menubar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }\n    }), __jsx(\"div\", {\n      className: \"page-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }\n    }, cartOpen && __jsx(Cart, {\n      itemMap: itemMap,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 20\n      }\n    }), __jsx(Dropdown, {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 6\n      }\n    }, __jsx(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      className: \"dropdown-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 8\n      }\n    }, \"Asset Description\"), __jsx(Dropdown.Menu, {\n      className: \"dropdown-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 8\n      }\n    }, this.getAssetDescriptions(items).map((x, i) => __jsx(Dropdown.Item, {\n      id: i,\n      className: \"dropdown-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, x)))), __jsx(Dropdown, {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 6\n      }\n    }, __jsx(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      className: \"dropdown-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 8\n      }\n    }, \"Asset Manufacturer\"), __jsx(Dropdown.Menu, {\n      className: \"dropdown-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 8\n      }\n    }, this.getAssetManufacturers(items).map((x, i) => __jsx(Dropdown.Item, {\n      id: i,\n      className: \"dropdown-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, x)))), __jsx(Dropdown, {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 6\n      }\n    }, __jsx(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      className: \"dropdown-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 8\n      }\n    }, \"Asset Model\"), __jsx(Dropdown.Menu, {\n      className: \"dropdown-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 8\n      }\n    }, this.getAssetModels(items).map(x => __jsx(Dropdown.Item, {\n      href: \"#/action-1\",\n      className: \"dropdown-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, x)))), __jsx(Dropdown, {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 6\n      }\n    }, __jsx(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      className: \"dropdown-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 8\n      }\n    }, \"Part Type\"), __jsx(Dropdown.Menu, {\n      className: \"dropdown-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 8\n      }\n    }, this.getPartTypes(items).map(x => __jsx(Dropdown.Item, {\n      href: \"#/action-1\",\n      className: \"dropdown-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, x)))), __jsx(Dropdown, {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 6\n      }\n    }, __jsx(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      className: \"dropdown-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 8\n      }\n    }, \"Part Description\"), __jsx(Dropdown.Menu, {\n      className: \"dropdown-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 8\n      }\n    }, this.getPartDescriptions(items).map(x => __jsx(Dropdown.Item, {\n      href: \"#/action-1\",\n      className: \"dropdown-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, x)))), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 6\n      }\n    }), items.map((item, i) => __jsx(Item, {\n      item: item,\n      added: !!itemMap[item.id],\n      addToCart: this.addToCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/henrysteinitz/Desktop/med-supplies/components/page.js"],"names":["Component","Dropdown","Cart","Item","MenuBar","Page","cartOpen","itemMap","assetDescription","assetManufacturer","assetModel","partType","partDescription","items","props","setState","state","item","newItemMap","id","console","log","value","filter","x","asset_description","tems","asset_manufacturer","asset_model","part_type","part_description","Array","Set","map","nextItems","filterAssetDescription","partModel","filterAssetManufacturer","filterAssetModel","filterPartType","filterPartDescription","render","toggleCart","getAssetDescriptions","i","getAssetManufacturers","getAssetModels","getPartTypes","getPartDescriptions","addToCart"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport { Dropdown } from 'react-bootstrap'\n\nimport Cart from \"./cart\"\nimport Item from \"./item\"\nimport MenuBar from \"./menubar\"\n\nexport default class Page extends Component {\n\tstate = {\n\t\tcartOpen: false,\n\t\titemMap: {},\n\t\tassetDescription: \"\",\n\t\tassetManufacturer: \"\",\n\t\tassetModel: \"\",\n\t\tpartType: \"\",\n\t\tpartDescription: \"\",\n\t\titems: this.props.items\n\t}\n\n\ttoggleCart = () => this.setState({ cartOpen: !this.state.cartOpen})\n\n\taddToCart = (item) => {\n\t\tlet newItemMap = this.state.itemMap;\n\t\tnewItemMap[item.id] = item\n\t\tthis.setState({ itemMap: newItemMap });\n\t\tconsole.log(this.state.itemMap)\n\t}\n\n\t// TODO: Generalize to all property names\n\tfilterAssetDescription = (items, value) => items.filter(x => x.asset_description === value)\n\n\tfilterAssetManufacturer = (items, value)  => tems.filter(x => x.asset_manufacturer === value)\n\n\tfilterAssetModel = (items, value)  => items.filter(x => x.asset_model === value)\n\n\tfilterPartType = (items, value)  => items.filter(x => x.part_type === value)\n\n\tfilterPartDescription = (items, value)  => items.filter(x => x.part_description === value)\n\n\tgetAssetDescriptions = (items, value) => new Array(new Set(items.map(item => item.asset_description)))\n\n\tgetAssetManufacturers = (items, value) => (\n\t\tnew Array(new Set(items.map(item => item.asset_manufacturer)))\n\t)\n\tgetAssetModels = (items, value) => (\n\t\tnew Array(new Set(items.map(item => item.asset_model)))\n\t)\n\tgetPartTypes = (items, value) => (\n\t\tnew Array(new Set(items.map(item => item.part_type)))\n\t)\n\tgetPartDescriptions = (items, value) => (\n\t\tnew Array(new Set(items.map(item => item.part_description)))\n\t) \n\n\thadleAssetDescriptionSelect = (value) => {\n\t\tlet { nextItems: [...items] } = this.state\n\t\tthis.setState({ \n\t\t\titems: this.filterAssetDescription(nextItems, value),\n\t\t\tassetManufacturer: '',\n\t\t\tassetModel: '',\n\t\t\tpartType: '',\n\t\t\tpartModel: ''\n\t\t})\n\t}\n\n\thadleAssetManufacturerSelect = (value) => {\n\t\tlet { nextItems: [...items] } = this.state\n\t\tthis.setState({ \n\t\t\titems: this.filterAssetManufacturer(nextItems, value),\n\t\t\tassetModel: '',\n\t\t\tpartType: '',\n\t\t\tpartModel: '' \n\t\t})\n\t}\n\n\thadleAssetModelSelect = (value) => {\n\t\tlet { nextItems: [...items] } = this.state\n\t\tthis.setState({ \n\t\t\titems: this.filterAssetModel(nextItems, value),\n\t\t\tpartType: '',\n\t\t\tpartModel: ''\n\t\t})\n\t}\n\n\thandlePartType = (value) => {\n\t\tlet { nextItems: [...items] } = this.state\n\t\tthis.setState({ \n\t\t\titems: this.filterPartType(nextItems, value),\n\t\t\tpartModel: ''\n\t\t})\n\t}\n\n\thandlePartDescription = () => {\n\t\tlet { nextItems: [...items] } = this.state\n\t\tthis.setState({ \n\t\t\titems: this.filterPartDescription(nextItems, value) \n\t\t})\n\t}\n\n\n\trender() {\n\t\tconst { cartOpen, itemMap, items } = this.state\n\n\t\treturn (\n\t\t\t<div className=\"page\">\n\t\t\t\t<MenuBar toggleCart={this.toggleCart} />\n\t\t\t\t<div className=\"fake-menubar\" />\n\t\t\t\t<div className=\"page-content\">\n\t\t\t\t\t{ cartOpen && <Cart itemMap={itemMap} />}\n\t\t\t\t\t<Dropdown className=\"dropdown\">\n\t\t\t\t\t  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" className=\"dropdown-button\">\n\t\t\t\t\t   \tAsset Description\n\t\t\t\t\t  </Dropdown.Toggle>\n\n\t\t\t\t\t  <Dropdown.Menu className=\"dropdown-menu\">\n\t\t\t\t\t    { this.getAssetDescriptions(items).map((x, i) => (\n\t\t\t\t\t    \t<Dropdown.Item id={i} className=\"dropdown-item\">{ x }</Dropdown.Item>\n\t\t\t\t\t    ))}\n\t\t\t\t\t  </Dropdown.Menu>\n\t\t\t\t\t</Dropdown>\n\t\t\t\t\t<Dropdown className=\"dropdown\">\n\t\t\t\t\t  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" className=\"dropdown-button\">\n\t\t\t\t\t   \tAsset Manufacturer\n\t\t\t\t\t  </Dropdown.Toggle>\n\n\t\t\t\t\t  <Dropdown.Menu className=\"dropdown-menu\">\n\t\t\t\t\t    { this.getAssetManufacturers(items).map((x, i) => (\n\t\t\t\t\t    \t<Dropdown.Item id={i} className=\"dropdown-item\">{ x }</Dropdown.Item>\n\t\t\t\t\t    ))}\n\t\t\t\t\t  </Dropdown.Menu>\n\t\t\t\t\t</Dropdown>\n\t\t\t\t\t<Dropdown className=\"dropdown\">\n\t\t\t\t\t  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" className=\"dropdown-button\">\n\t\t\t\t\t   \tAsset Model\n\t\t\t\t\t  </Dropdown.Toggle>\n\n\t\t\t\t\t  <Dropdown.Menu className=\"dropdown-menu\">\n\t\t\t\t\t    { this.getAssetModels(items).map(x => (\n\t\t\t\t\t    \t<Dropdown.Item href=\"#/action-1\" className=\"dropdown-item\">{ x }</Dropdown.Item>\n\t\t\t\t\t    ))}\n\t\t\t\t\t  </Dropdown.Menu>\n\t\t\t\t\t</Dropdown>\n\t\t\t\t\t<Dropdown className=\"dropdown\">\n\t\t\t\t\t  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" className=\"dropdown-button\">\n\t\t\t\t\t   \tPart Type\n\t\t\t\t\t  </Dropdown.Toggle>\n\n\t\t\t\t\t  <Dropdown.Menu className=\"dropdown-menu\">\n\t\t\t\t\t    { this.getPartTypes(items).map(x => (\n\t\t\t\t\t    \t<Dropdown.Item href=\"#/action-1\" className=\"dropdown-item\">{ x }</Dropdown.Item>\n\t\t\t\t\t    ))}\n\t\t\t\t\t  </Dropdown.Menu>\n\t\t\t\t\t</Dropdown>\n\t\t\t\t\t<Dropdown className=\"dropdown\">\n\t\t\t\t\t  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" className=\"dropdown-button\">\n\t\t\t\t\t   \tPart Description\n\t\t\t\t\t  </Dropdown.Toggle>\n\n\t\t\t\t\t  <Dropdown.Menu className=\"dropdown-menu\">\n\t\t\t\t\t    { this.getPartDescriptions(items).map(x => (\n\t\t\t\t\t    \t<Dropdown.Item href=\"#/action-1\" className=\"dropdown-item\">{ x }</Dropdown.Item>\n\t\t\t\t\t    ))}\n\t\t\t\t\t  </Dropdown.Menu>\n\t\t\t\t\t</Dropdown>\n\t\t\t\t\t<br />\n\t\t\t\t    {\n\t\t\t\t    \titems.map((item, i) => (\n\t\t\t\t            <Item item={item} added={!!itemMap[item.id]} addToCart={this.addToCart} />\n\t\t\t\t  \t\t))\n\t\t\t    \t}\n\t\t\t    </div>\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}